name: Backend Tests

# any branch is useful for testing before a PR is submitted
on:
  workflow_call:

jobs:
  withplugins:
    # run on pushes to any branch
    # run on PRs from external forks
    if: |
      (github.event_name != 'pull_request')
      || (github.event.pull_request.head.repo.id != github.event.pull_request.base.repo.id)
    name: with Plugins
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Install libreoffice
        uses: awalsh128/cache-apt-pkgs-action@v1.4.2
        with:
          packages: libreoffice libreoffice-pdfimport
          version: 1.0
      -
        name: Install etherpad core
        uses: actions/checkout@v3
        with:
          repository: ether/etherpad-lite
          path: etherpad-lite
      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      -
        name: Checkout plugin repository
        uses: actions/checkout@v3
        with:
          path: plugin
      -
        name: Determine plugin name
        id: plugin_name
        working-directory: ./plugin
        run: |
          npx -c 'printf %s\\n "::set-output name=plugin_name::${npm_package_name}"'
      -
        name: Link plugin directory
        working-directory: ./plugin
        run: |
          pnpm link --global
      - name: Remove tests
        working-directory: ./etherpad-lite
        run: rm -rf ./src/tests/backend/specs
      -
        name: Install Etherpad core dependencies
        working-directory: ./etherpad-lite
        run: bin/installDeps.sh
      - name: Build plugin
        working-directory: ./plugin
        run: |
          npm i --include dev
          npm run build
          ls -la .
      - name: Build Solr
        working-directory: ./plugin
        run: |
          docker buildx build -o type=docker -t ep_weave/solr -f ./solr/Dockerfile .
      - name: Link plugin to etherpad-lite
        working-directory: ./etherpad-lite
        run: |
          pnpm link --global $PLUGIN_NAME
          pnpm run plugins i --path  ../../plugin
        env:
          PLUGIN_NAME: ${{ steps.plugin_name.outputs.plugin_name }}
      - name: Prepare ep_search
        working-directory: ./etherpad-lite
        run: |
          git clone -b feature/search-engine https://github.com/NII-cloud-operation/ep_search.git /tmp/ep_search
          cd /tmp/ep_search
          ls -la /tmp/ep_search
          npm pack
      - name: Install ep_search
        working-directory: ./etherpad-lite
        run: |
          pnpm run plugins i --path /tmp/ep_search
      - name: Link ep_etherpad-lite
        working-directory: ./etherpad-lite/src
        run: |
          pnpm link --global
      - name: Link etherpad to plugin
        working-directory: ./plugin
        run: |
          pnpm link --global ep_etherpad-lite
      -
        name: Run the backend tests
        working-directory: ./etherpad-lite
        run: |
          docker run -d --name etherpad-solr -p 8983:8983 ep_weave/solr
          MAX_ATTEMPTS=60
          counter=0
          while ! nc -z localhost 8983; do
            echo "Waiting for Solr to start ${counter}/${MAX_ATTEMPTS}"
            counter=$((counter+1))
            if [ "$counter" -ge "$MAX_ATTEMPTS" ]; then
              echo "Solr did not start"
              exit 1
            fi
            sleep 0.5
          done
          counter=0
          while ! curl http://localhost:8983/solr/pad/admin/ping | grep '"status":"OK"'; do
            echo "Waiting for Solr to respond ${counter}/${MAX_ATTEMPTS}"
            counter=$((counter+1))
            if [ "$counter" -ge "$MAX_ATTEMPTS" ]; then
              echo "Solr did not respond"
              exit 1
            fi
            sleep 0.5
          done
          pnpm run test --settings ../plugin/tests/settings.json
        env:
          LOGLEVEL: DEBUG
      - name: Stop Solr
        if: always()
        run: |
          docker logs etherpad-solr
          docker stop etherpad-solr
          docker rm etherpad-solr
